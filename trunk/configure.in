dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
 
dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.
 
dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.
 
dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM 
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(sim, 0.8) dnl searches for some needed programs

KDE_SET_PREFIX

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

AC_PATH_KDE
#MIN_CONFIG

AC_LANG_CPLUSPLUS
dnl PACKAGE set before
AC_STDC_HEADERS
AC_C_BIGENDIAN
AM_PROG_LEX
LFLAGS="-o${LEX_OUTPUT_ROOT}.c"
AC_SUBST(LFLAGS)
AC_CYGWIN
if "$CYGWIN" = "yes"; then
 LDFLAGS="$LDFLAGS --enable-auto-import"
fi
AC_CHECK_HEADERS(inttypes.h stdint.h unistd.h ctype.h)
AC_CHECK_FUNC(umask,[AC_DEFINE(HAVE_UMASK,1,[Have umask])])
AC_CHECK_OPENSSL
AC_TM_GMTOFF
XSS_LIBS="no"
ac_save_CPPFLAGS="$CPPFLAGS"
ac_save_LDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $all_libraries"
CPPFLAGS="$CPPFLAGS $X_INCLUDES"
AC_CHECK_LIB(Xext, XScreenSaverRegister,[XSS_LIBS=""],[], [-lX11 -lXext -lm])
AC_CHECK_LIB(Xss, XScreenSaverRegister,[XSS_LIBS="-lXss"],[],[-lX11 -lXext -lm])
if test \! "$XSS_LIBS" = "no"; then
  KDE_CHECK_HEADER(X11/extensions/scrnsaver.h,[AC_DEFINE(USE_SCRNSAVER,1,[Use screensaver])])
else
  dnl Don't include the screensaver libs if we can't find the header.
  XSS_LIBS=""
fi
LIBS="$LIBS $XSS_LIBS"
CPPFLAGS="$ac_save_CPPFLAGS"
LDFLAGS="$ac_save_LDFLAGS"
if test "$use_kde" = "yes" ; then
KDE_CHECK_HEADER(krootpixmap.h,[AC_DEFINE(HAVE_KROOTPIXMAP_H,1,[Have krootpixmap.h])]
)
KDE_CHECK_HEADER(ktextedit.h,[AC_DEFINE(HAVE_KTEXTEDIT_H,1,[Have ktextedit.h])])
KDE_CHECK_HEADER(ktextbrowser.h,[AC_DEFINE(HAVE_KTEXTBROWSER_H,1,[Have ktextbrowser.h])])
KDE_CHECK_HEADER(kextsock.h,[AC_DEFINE(HAVE_KEXTSOCK_H,1,[Have kextsock.h])])
AC_ARG_ENABLE(kde, [  --disable-spell         don't use spell],
        use_spell=$enableval, use_spell=yes)
if test "${use_spell}" = "yes"; then
LIBS="$LIBS $LIB_KSPELL"
AC_DEFINE(USE_SPELL,1,[Use speller])
fi
fi
AC_DEFINE_UNQUOTED(PREFIX, "$prefix", [Install prefix])
if test "$WITH_OPENSSL" = "no"; then
  echo ""
  echo "OpenSSL support is not available.  SIM will not be able to"
  echo "establish secure communication channels. This is not required"
  echo "for proper function (i.e. it is optional). If you really desire this"
  echo "functionality then install OpenSSL (libraries and headers) and"
  echo "rebuild SIM.  OpenSSL can be found at http://www.openssl.org"
  echo "or as RPM from your local distribution site."
fi

KDE_CREATE_SUBDIRSLIST
AC_CONFIG_FILES([ ./Makefile ])
AC_CONFIG_FILES([ pict/Makefile ])
AC_CONFIG_FILES([ po/Makefile ])
AC_CONFIG_FILES([ sim/Makefile ])
AC_CONFIG_FILES([ sim/libicq/Makefile ])
AC_CONFIG_FILES([ sim/qt3/Makefile ])
AC_CONFIG_FILES([ sim/ui/Makefile ])
AC_CONFIG_FILES([ sim/xpm/Makefile ])
AC_CONFIG_FILES([ sounds/Makefile ])
AC_OUTPUT
