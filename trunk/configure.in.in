#MIN_CONFIG


AC_LANG_CPLUSPLUS
AM_INIT_AUTOMAKE(sim,0.9.2)
AC_STDC_HEADERS
AC_C_BIGENDIAN
AM_PROG_LEX
AM_CONDITIONAL(QT2, test "$kde_qtver" = "2")
if test "$kde_qtver" = "2" ; then
 LIBUIQT="../../sim/ui/qt3/libsimuiqt.la"
 LIBUI="../../sim/ui/libsimui.la ../../sim/ui/qt3/libsimuiqt.la"
else
 LIBUIQT=""
 LIBUI="../../sim/ui/libsimui.la"
fi
AC_SUBST(LIBUIQT)
AC_SUBST(LIBUI)
LFLAGS="-o${LEX_OUTPUT_ROOT}.c"
AC_SUBST(LFLAGS)
AC_CYGWIN
if test "$CYGWIN" = "yes"; then
 LDFLAGS="$LDFLAGS --enable-auto-import"
fi
RELEASE_BUILD="no"
AC_ARG_ENABLE(
 release,
 [  --enable-release        enable release build],
 RELEASE_BUILD="$enableval")
if test "$RELEASE_BUILD" != "yes"; then
 AC_DEFINE(CVS_BUILD, 1, [CVS build])
fi

AC_LANG_SAVE
AC_LANG_C
KDE_LIB_LTDL
AC_LANG_RESTORE

AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_TYPE_OFF_T
AC_STRUCT_TM
AC_PROG_RANLIB
AC_PATH_X
AC_HEADER_SYS_WAIT
AC_HEADER_STDBOOL
AC_FUNC_STAT
AC_FUNC_REALLOC
AC_FUNC_MMAP
AC_FUNC_MKTIME
AC_FUNC_MEMCMP
AC_FUNC_MALLOC
AC_FUNC_FORK
AC_FUNC_ERROR_AT_LINE
AC_C_INLINE
AC_C_CONST
AC_CHECK_LIB(art_lgpl_2,libart_version)
AC_CHECK_OPENSSL
AC_CHECK_HEADERS([inttypes.h stdint.h stddef.h unistd.h limits.h fcntl.h ctype.h netdb.h netinet/in.h arpa/inet.h sys/types.h sys/time.h sys/socket.h])
AC_CHECK_FUNC(strcasecmp,[AC_DEFINE(HAVE_STRCASECMP,1,[Have strcasecmp])])
AC_CHECK_FUNC(umask,[AC_DEFINE(HAVE_UMASK,1,[Have umask])])
AC_CHECK_FUNC(chmod,[AC_DEFINE(HAVE_CHMOD,1,[Have chmod])])
AC_CHECK_FUNC(gethostbyname_r,[AC_DEFINE(HAVE_GETHOSTBYNAME_R,1,[Have gethostbyname_r])]) 
AC_CHECK_FUNC(gethostbyaddr_r,[AC_DEFINE(HAVE_GETHOSTBYADDR_R,1,[Have gethostbyaddr_r])])
AC_CHECK_FUNCS([dup2, strtoul, strtol, strstr, strerror, strdup, strcasecmp, socket, rmdir, munmap, mkdir,memset, memmove, inet_ntoa, gethostname, gethostbyname])
AC_TM_GMTOFF
EXTRA_LIBS=""
if test "$use_kde" = "yes" ; then
KDE_CHECK_HEADER(ktextedit.h,[AC_DEFINE(HAVE_KTEXTEDIT_H,1,[Have ktextedit.h])])
fi
AC_DEFINE_UNQUOTED(PREFIX, "$prefix", [Install prefix])
AC_DEFINE(USE_QT,1,[Use QT - need for libicq])
AC_SUBST(EXTRA_LIBS)
sim_plugindir="${kde_datadir}/sim/plugins"
AC_SUBST(sim_plugindir)

if test "$WITH_OPENSSL" = "no"; then
  echo ""
  echo "OpenSSL support is not available.  SIM will not be able to"
  echo "establish secure communication channels. This is not required"
  echo "for proper function (i.e. it is optional). If you really desire this"
  echo "functionality then install OpenSSL (libraries and headers) and"
  echo "rebuild SIM.  OpenSSL can be found at http://www.openssl.org"
  echo "or as RPM from your local distribution site."
fi

